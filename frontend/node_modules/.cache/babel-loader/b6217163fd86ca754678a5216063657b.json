{"ast":null,"code":"import { LOAD_ITEMS, REMOVE_ITEM, ADD_ITEM } from './items';\nconst LOAD = 'pokemon/LOAD';\nconst LOAD_TYPES = 'pokemon/LOAD_TYPES';\nconst ADD_ONE = 'pokemon/ADD_ONE';\n\nconst load = list => ({\n  type: LOAD,\n  list\n});\n\nconst loadTypes = types => ({\n  type: LOAD_TYPES,\n  types\n});\n\nconst addOnePokemon = pokemon => ({\n  type: ADD_ONE,\n  pokemon\n});\n\nexport const getPokemon = () => async dispatch => {\n  const response = await fetch(`/api/pokemon`);\n\n  if (response.ok) {\n    const list = await response.json();\n    dispatch(load(list));\n  }\n};\nexport const getPokemonTypes = () => async dispatch => {\n  const response = await fetch(`/api/pokemon/types`);\n\n  if (response.ok) {\n    const types = await response.json();\n    dispatch(loadTypes(types));\n  }\n};\nexport const getPokemonDetails = id => async dispatch => {\n  const response = await fetch(`/api/pokemon/${id}`);\n\n  if (response.ok) {\n    const pokemon = await response.json();\n    dispatch(addOnePokemon(pokemon));\n  }\n};\nexport const createNewPokemon = payload => async dispatch => {\n  const response = await fetch(`/api/pokemon`);\n};\nconst initialState = {\n  list: [],\n  types: []\n};\n\nconst sortList = list => {\n  return list.sort((pokemonA, pokemonB) => {\n    return pokemonA.no - pokemonB.no;\n  }).map(pokemon => pokemon.id);\n};\n\nconst pokemonReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD:\n      const allPokemon = {};\n      action.list.forEach(pokemon => {\n        allPokemon[pokemon.id] = pokemon;\n      });\n      return { ...allPokemon,\n        ...state,\n        list: sortList(action.list)\n      };\n\n    case LOAD_TYPES:\n      return { ...state,\n        types: action.types\n      };\n\n    case ADD_ONE:\n      if (!state[action.pokemon.id]) {\n        const newState = { ...state,\n          [action.pokemon.id]: action.pokemon\n        };\n        const pokemonList = newState.list.map(id => newState[id]);\n        pokemonList.push(action.pokemon);\n        newState.list = sortList(pokemonList);\n        return newState;\n      }\n\n      return { ...state,\n        [action.pokemon.id]: { ...state[action.pokemon.id],\n          ...action.pokemon\n        }\n      };\n\n    case LOAD_ITEMS:\n      return { ...state,\n        [action.pokemonId]: { ...state[action.pokemonId],\n          items: action.items.map(item => item.id)\n        }\n      };\n\n    case REMOVE_ITEM:\n      return { ...state,\n        [action.pokemonId]: { ...state[action.pokemonId],\n          items: state[action.pokemonId].items.filter(itemId => itemId !== action.itemId)\n        }\n      };\n\n    case ADD_ITEM:\n      console.log(action.item);\n      return { ...state,\n        [action.item.pokemonId]: { ...state[action.item.pokemonId],\n          items: [...state[action.item.pokemonId].items, action.item.id]\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default pokemonReducer;","map":{"version":3,"sources":["/home/dvwhite/aa/practice-for-week-15-react-thunk-pokedex-long-practice/frontend/src/store/pokemon.js"],"names":["LOAD_ITEMS","REMOVE_ITEM","ADD_ITEM","LOAD","LOAD_TYPES","ADD_ONE","load","list","type","loadTypes","types","addOnePokemon","pokemon","getPokemon","dispatch","response","fetch","ok","json","getPokemonTypes","getPokemonDetails","id","createNewPokemon","payload","initialState","sortList","sort","pokemonA","pokemonB","no","map","pokemonReducer","state","action","allPokemon","forEach","newState","pokemonList","push","pokemonId","items","item","filter","itemId","console","log"],"mappings":"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","sourcesContent":["import { LOAD_ITEMS, REMOVE_ITEM, ADD_ITEM } from './items';\n\nconst LOAD = 'pokemon/LOAD';\nconst LOAD_TYPES = 'pokemon/LOAD_TYPES';\nconst ADD_ONE = 'pokemon/ADD_ONE';\n\nconst load = list => ({\n  type: LOAD,\n  list\n});\n\nconst loadTypes = types => ({\n  type: LOAD_TYPES,\n  types\n});\n\nconst addOnePokemon = pokemon => ({\n  type: ADD_ONE,\n  pokemon\n});\n\nexport const getPokemon = () => async dispatch => {\n  const response = await fetch(`/api/pokemon`);\n\n  if (response.ok) {\n    const list = await response.json();\n    dispatch(load(list));\n  }\n};\n\nexport const getPokemonTypes = () => async dispatch => {\n  const response = await fetch(`/api/pokemon/types`);\n\n  if (response.ok) {\n    const types = await response.json();\n    dispatch(loadTypes(types));\n  }\n};\n\nexport const getPokemonDetails = (id) => async dispatch => {\n  const response = await fetch(`/api/pokemon/${id}`);\n\n  if (response.ok) {\n    const pokemon = await response.json();\n    dispatch(addOnePokemon(pokemon));\n  }\n};\n\nexport const createNewPokemon = (payload) => async dispatch => {\n  const response = await fetch(`/api/pokemon`, )\n}\n\nconst initialState = {\n  list: [],\n  types: []\n};\n\nconst sortList = (list) => {\n  return list.sort((pokemonA, pokemonB) => {\n    return pokemonA.no - pokemonB.no;\n  }).map((pokemon) => pokemon.id);\n};\n\nconst pokemonReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD:\n      const allPokemon = {};\n      action.list.forEach(pokemon => {\n        allPokemon[pokemon.id] = pokemon;\n      });\n      return {\n        ...allPokemon,\n        ...state,\n        list: sortList(action.list)\n      };\n    case LOAD_TYPES:\n      return {\n        ...state,\n        types: action.types\n      };\n    case ADD_ONE:\n      if (!state[action.pokemon.id]) {\n        const newState = {\n          ...state,\n          [action.pokemon.id]: action.pokemon\n        };\n        const pokemonList = newState.list.map(id => newState[id]);\n        pokemonList.push(action.pokemon);\n        newState.list = sortList(pokemonList);\n        return newState;\n      }\n      return {\n        ...state,\n        [action.pokemon.id]: {\n          ...state[action.pokemon.id],\n          ...action.pokemon\n        }\n      };\n    case LOAD_ITEMS:\n      return {\n        ...state,\n        [action.pokemonId]: {\n          ...state[action.pokemonId],\n          items: action.items.map(item => item.id)\n        }\n      };\n    case REMOVE_ITEM:\n      return {\n        ...state,\n        [action.pokemonId]: {\n          ...state[action.pokemonId],\n          items: state[action.pokemonId].items.filter(\n            (itemId) => itemId !== action.itemId\n          )\n        }\n      };\n    case ADD_ITEM:\n      console.log(action.item);\n      return {\n        ...state,\n        [action.item.pokemonId]: {\n          ...state[action.item.pokemonId],\n          items: [...state[action.item.pokemonId].items, action.item.id]\n        }\n      };\n    default:\n      return state;\n  }\n}\n\nexport default pokemonReducer;\n"]},"metadata":{},"sourceType":"module"}